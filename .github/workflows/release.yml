name: üéâ Release Binary

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - uses: actions/setup-go@v4
        with:
          go-version: 1.21.x

      # Âº∫ÂäõGitËÆ§ËØÅÈÖçÁΩÆ
      - name: Configure Git authentication
        run: |
          # ÊñπÊ≥ï1: Áõ¥Êé•ËÆæÁΩÆ Git Âá≠ÊçÆ
          git config --global credential.helper store
          echo "https://${{ secrets.PRIVATE_REPO_TOKEN }}@github.com" > ~/.git-credentials
          
          # ÊñπÊ≥ï2: ÈÖçÁΩÆ URL ÈáçÂÜôÔºàÂ§öÁßçÊ†ºÂºèÔºâ
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/".insteadOf "ssh://git@github.com/"
          
          # ÊñπÊ≥ï3: ËÆæÁΩÆÁî®Êà∑‰ø°ÊÅØ
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # ÊñπÊ≥ï4: Á¶ÅÁî®‰∫§‰∫íÂºèÊèêÁ§∫
          git config --global core.askPass ""
          
          # È™åËØÅÈÖçÁΩÆ
          echo "Git configuration:"
          git config --global --list | grep -E "(url|credential|user)"
          
          # ÊµãËØïËÆøÈóÆ
          echo "Testing Git access:"
          git ls-remote https://${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/zan8in/libra.git || echo "Git access test failed"

      # ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè
      - name: Set environment variables
        run: |
          echo "GOPRIVATE=github.com/zan8in" >> $GITHUB_ENV
          echo "GOPROXY=https://proxy.golang.org,direct" >> $GITHUB_ENV
          echo "GONOSUMDB=github.com/zan8in" >> $GITHUB_ENV
          echo "GIT_TERMINAL_PROMPT=0" >> $GITHUB_ENV
          echo "GIT_ASKPASS=echo" >> $GITHUB_ENV
          echo "GIT_USERNAME=${{ secrets.PRIVATE_REPO_TOKEN }}" >> $GITHUB_ENV
          echo "GIT_PASSWORD=" >> $GITHUB_ENV

      # Âº∫Âà∂Ê∏ÖÁêÜÂπ∂‰∏ãËΩΩ
      - name: Force clean and download modules
        run: |
          # ÂÆåÂÖ®Ê∏ÖÁêÜ
          go clean -modcache
          rm -rf ~/go/pkg/mod
          
          # ËÆæÁΩÆ‰∏¥Êó∂ÁéØÂ¢ÉÂèòÈáè
          export GOPRIVATE="github.com/zan8in"
          export GOPROXY="https://proxy.golang.org,direct"
          export GONOSUMDB="github.com/zan8in"
          export GIT_TERMINAL_PROMPT="0"
          export GIT_ASKPASS="echo"
          
          # Â∞ùËØï‰∏ãËΩΩ
          echo "Attempting to download modules..."
          go mod download -x
          
          echo "Verifying modules..."
          go mod verify
        env:
          GOPRIVATE: "github.com/zan8in"
          GOPROXY: "https://proxy.golang.org,direct"
          GONOSUMDB: "github.com/zan8in"
          GIT_TERMINAL_PROMPT: "0"
          GIT_ASKPASS: "echo"

      - uses: goreleaser/goreleaser-action@v4
        with:
          args: "release --clean"
          version: latest
        env:
          GITHUB_TOKEN: "${{ secrets.PRIVATE_REPO_TOKEN }}"
          GOPRIVATE: "github.com/zan8in"
          GOPROXY: "https://proxy.golang.org,direct"
          GONOSUMDB: "github.com/zan8in"
          GIT_TERMINAL_PROMPT: "0"
